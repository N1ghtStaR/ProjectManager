@model ProjectManager.Models.DeveloperViewModel

@{
    ViewBag.Title = "Details";
}

<center>
    <h2>User Account</h2>
    <h6>Information and statistics</h6>
</center>

<div>
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Username)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Username)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Email)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Email)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Role)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Role)
        </dd>
        <hr />
        <center>
            <h2>Projects Details</h2>
        </center>
        <hr style="width: 50%"/>
        <br />
        <dt>
            <p>Projects</p>
        </dt>
        <dd>
            <p>
                @ViewBag.Projects
                @if(Model.ID.Equals(Session["ID"]) && ViewBag.Projects != 0)
                {
                    <a href="@Url.Action("Index", "Projects")" class="btn btn-sm btn-default">Details</a>
                }
            </p>
        </dd>
        @if (ViewBag.Projects != 0)
        {
            <dt>
                In Progress
            </dt>
            <dd>
                <p>
                    @ViewBag.ProjectsInProgress
                    @if(Model.ID.Equals(Session["ID"]) && ViewBag.ProjectsInProgress != 0)
                    {
                        <a href="@Url.Action("Status", "Projects", new { status = "InProgress" })" class="btn btn-sm btn-default">Details</a>
                    }
                </p>
            </dd>
            <dt>
                Ready
            </dt>
            <dd>
                <p>
                    @ViewBag.ProjectsReady
                    @if(Model.ID.Equals(Session["ID"]) && ViewBag.ProjectsReady != 0)
                    {
                        <a href="@Url.Action("Status", "Projects", new { status = "Ready" })" class="btn btn-sm btn-default">Details</a>
                    }
                </p>
            </dd>
        }

        @if (Model.ID.Equals(Session["ID"]))
        {
            <hr />
            <center>
                <h2>Income Details</h2>
            </center>
            <hr style="width:50%"/>
            <br />
            <dt>
                <p>Total Incomes</p>
            </dt>
            <dd>
                <p>@ViewBag.TotalIncomes$</p>
            </dd>
            if (ViewBag.TotalIncome != 0)
            {
                <dt>
                    <p>Impost</p>
                </dt>
                <dd>
                    <p>-@ViewBag.DDS$</p>
                </dd>
                <dt>
                    <p>Incomes In Bank</p>
                </dt>
                <dd>
                    <p>@ViewBag.Cash$</p>
                </dd>
            }
        }
    </dl>

        @if (Session["Role"].ToString().Equals("TeamLeader") && Model.ID != (int)Session["ID"])
        {
            using (Html.BeginForm("Update", "Authentication"))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal hidden">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ID)
                    <div class="form-group">
                        @Html.LabelFor(model => model.ID, "ID", htmlAttributes: new { @class = "control-label col-md-2" })
                     </div>
                     <div class="form-group">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                     </div>
                     <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                     </div>
                     <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                     </div>
                     <div class="form-group">
                        <div class="col-md-10">
                            <input type="text" name="Role" value="@ViewBag.RoleValue" />
                        </div>
                     </div>
                </div>
                <hr />
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@ViewBag.SubmitValue" class="btn btn-primary" />
                        <a href="@Url.Action("List", "Projects")" class="btn btn-default">Back</a>
                    </div>
                    <br />
                </div>
            }
         }
</div>